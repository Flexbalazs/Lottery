import java.util.ArrayList;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;
import java.util.Random;
import java.util.LinkedHashSet;
import java.util.List;

/**
 *
 * @author Flex
 */

public class Lotto {

    public static void main(String[] args) {
        
        Scanner sc = new Scanner(System.in);
        
        boolean wannaPlay = true;
        while (wannaPlay) {
            String name = "";

            Set<Integer> winningNumbers = new TreeSet<>();

            int max = 30;
            int min = 1;
            int randomGuessesPcs = 0;
            boolean existsRandom = false;
            
            List<Ticket> tickets = new ArrayList<>();
            tickets.sort(new CorrectGuessComparator());

            Random rand = new Random();
            Set<String> names = new LinkedHashSet<>();
            
            //here are the 3 winning numbers raffled
            do {
                int actualWinningNumber = (rand.nextInt(30)) + 1;

                //checking if there is already a number like this one
                if (winningNumbers.contains(actualWinningNumber)) {
                    existsRandom = true;
                }

                //if it's new a winning number we have to add it
                if (!existsRandom) {
                    winningNumbers.add(actualWinningNumber);
                    randomGuessesPcs++;
                }
            } while (randomGuessesPcs < 3);  //we only want 3 pcs numbers

            

            int serialNumber = 1;

            while (true) {
                System.out.print("Give me the " + serialNumber + ". player's name, * character if there is no more! ");
                name = sc.nextLine();
                if (!name.equals("*")) {

                    if (name != null && name.length() > 0) {
                        names.add(name);
                    } else {
                        names.add("Player");
                    }
                    
                    serialNumber++;

                } else {
                    break;
                }
            }
            if (names.size() > 0) {

                for (String nev : names) {
                    int guessNumber = 1;
                    Set<Integer> playersGuesses = new LinkedHashSet<>();

                    while (guessNumber < 4) {

                        System.out.print("Add " + name + " player's " + guessNumber + ". guess! ");
                        int guess = sc.nextInt();
                        sc.nextLine();

                        
                        if (playersGuesses.contains(guess)) {
                            System.out.println("It was already guessed!");

                        } else if (guess > 30 || guess < 1) {
                            System.out.println("Please add a number between 1 and 30!");

                        } else {
                            playersGuesses.add(guess);
                            guessNumber++;
                        }

                    }
                    tickets.add(new Ticket(name, playersGuesses));
                    for (Ticket winningOnes : tickets) {
                    winningOnes.evaluates(winningNumbers);
                }
                }
                System.out.print("The winning numbers are:");
                for (Integer numbers : winningNumbers) {
                    System.out.print(" " + numbers);
                }
                System.out.println();
                for (Ticket winningOnes : tickets) {

                    System.out.print(winningOnes.getName() + " guesses:");
                    for (Integer numbers : winningOnes.getGuesses()) {
                        System.out.print(" " + numbers);
                    }
                    System.out.println(", this meant" + winningOnes.getCorrectGuessesCount() + " winning number!");

                }
            }
            System.out.print("Wanna play again? (y/n) ");

            if (sc.nextLine().equals("y")) {
                wannaPlay = true;
            } else {
                wannaPlay = false;
            }
        }

    }
}
